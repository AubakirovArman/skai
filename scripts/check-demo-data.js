/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
 * –ó–∞–ø—É—Å–∫: node scripts/check-demo-data.js
 */

const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkDemoData() {
  try {
    console.log('üîç Checking demo data in database...\n')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º
    const modeRecord = await prisma.dialogSettings.findUnique({
      where: { key: 'virtual-director-mode' }
    })

    if (modeRecord) {
      console.log(`‚úÖ Mode: ${modeRecord.value}`)
    } else {
      console.log('‚ùå Mode not set')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ
    const demoDataRecord = await prisma.dialogSettings.findUnique({
      where: { key: 'virtual-director-demo-data' }
    })

    if (demoDataRecord) {
      const demoData = JSON.parse(demoDataRecord.value)
      const fields = Object.keys(demoData)
      console.log(`‚úÖ Demo data exists with ${fields.length} fields`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø–æ —è–∑—ã–∫–∞–º
      let ruCount = 0, kkCount = 0, enCount = 0
      
      fields.forEach(field => {
        if (demoData[field]?.ru) ruCount++
        if (demoData[field]?.kk) kkCount++
        if (demoData[field]?.en) enCount++
      })
      
      console.log(`   - RU: ${ruCount}/${fields.length} fields filled`)
      console.log(`   - KK: ${kkCount}/${fields.length} fields filled`)
      console.log(`   - EN: ${enCount}/${fields.length} fields filled`)
    } else {
      console.log('‚ùå Demo data NOT found')
      console.log('\nüìù To fix this:')
      console.log('   1. Go to http://localhost:3000/admin/virtual-director')
      console.log('   2. Switch to "–î–µ–º–æ —Ä–µ–∂–∏–º" tab')
      console.log('   3. Fill in all fields for all languages')
      console.log('   4. Click "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã
    console.log('\nüé§ Checking audio files...')
    
    const languages = ['ru', 'kk', 'en']
    for (const lang of languages) {
      const audioRecord = await prisma.dialogSettings.findUnique({
        where: { key: `virtual-director-demo-audio-${lang}` }
      })
      
      if (audioRecord) {
        const audioData = JSON.parse(audioRecord.value)
        const totalSize = (audioData.vnd.length + audioData.np.length + audioData.summary.length) / 1024
        console.log(`‚úÖ ${lang.toUpperCase()} audio: ${totalSize.toFixed(0)} KB (generated: ${audioData.generatedAt})`)
      } else {
        console.log(`‚ùå ${lang.toUpperCase()} audio: NOT found`)
      }
    }

    console.log('\n‚ú® Check complete!')

  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkDemoData()
