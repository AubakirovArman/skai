/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ TTS API
 * –ó–∞–ø—É—Å–∫: node scripts/test-tts-api.js
 */

const TTS_API_URL = process.env.NEXT_PUBLIC_TTS_API_URL || 'https://tts.sk-ai.kz/api/tts'

async function testTTS() {
  try {
    console.log('üé§ Testing TTS API...')
    console.log(`üìç URL: ${TTS_API_URL}`)

    const testText = '–¢–µ—Å—Ç –æ–∑–≤—É—á–∫–∏. –≠—Ç–æ –ø—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.'
    console.log(`üìù Test text: "${testText}"`)

    console.log('\n‚è≥ Sending request...')
    const startTime = Date.now()

    const response = await fetch(TTS_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        text: testText,
        lang: 'ru',
      }),
    })

    const duration = Date.now() - startTime

    console.log(`\nüìä Response status: ${response.status} ${response.statusText}`)
    console.log(`‚è±Ô∏è  Duration: ${duration}ms`)
    console.log(`üì¶ Content-Type: ${response.headers.get('content-type')}`)

    if (!response.ok) {
      const errorText = await response.text()
      console.error('‚ùå Error response:', errorText)
      return
    }

    const audioBuffer = await response.arrayBuffer()
    console.log(`‚úÖ Audio received: ${audioBuffer.byteLength} bytes (${(audioBuffer.byteLength / 1024).toFixed(2)} KB)`)

    console.log('\n‚ú® TTS API is working correctly!')

  } catch (error) {
    console.error('‚ùå Error:', error.message)
    console.error('\nüí° Possible issues:')
    console.error('   - TTS API server is down')
    console.error('   - Network connectivity issues')
    console.error('   - Invalid API URL')
  }
}

testTTS()
