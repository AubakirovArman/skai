const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function main() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin2...\n')
    
    // –û–±–Ω–æ–≤–ª—è–µ–º admin2
    const updatedUser = await prisma.user.update({
      where: { id: 'cmgtdnibr0001yclptuxqajgt' },
      data: {
        email: 'admin2',
        role: 'dialog_admin',
        password: await bcrypt.hash('admin2', 10),
      },
      select: {
        id: true,
        name: true,
        email: true,
        role: true,
      }
    })

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω:')
    console.log(`   –ò–º—è: ${updatedUser.name}`)
    console.log(`   Email: ${updatedUser.email}`)
    console.log(`   –†–æ–ª—å: ${updatedUser.role}`)
    console.log('\nüìù –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤–æ–π—Ç–∏:')
    console.log('   –õ–æ–≥–∏–Ω: admin2')
    console.log('   –ü–∞—Ä–æ–ª—å: admin2')
    console.log('   –î–æ—Å—Ç—É–ø –∫ /dialog/admin: ‚úÖ')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

main()
