import { NextRequest, NextResponse } from 'next/server'
import { alemllm } from '@/lib/alemllm'
import { embeddingClient } from '@/lib/embedding-client'
import { searchVND } from '@/lib/vector-db'

export async function POST(request: NextRequest) {
  try {
    const { message } = await request.json()

    console.log('[VND] üì• Received message:', message?.substring(0, 100))

    if (!message || !message.trim()) {
      return NextResponse.json({ error: 'Message is required' }, { status: 400 })
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º embedding –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let queryVector: number[]
    try {
      console.log('[VND] üî¢ Generating embedding...')
      queryVector = await embeddingClient.embedSingle(message)
      console.log('[VND] ‚úÖ Embedding generated, length:', queryVector.length)
    } catch (error) {
      console.error('[VND] ‚ùå Embedding service error:', error)
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ embedding. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ embedding service –∑–∞–ø—É—â–µ–Ω.' 
      }, { status: 503 })
    }

    // –ò—â–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –ë–î –í–ù–î
    let context = ''
    let hasContextFromDB = false
    try {
      console.log('[VND] üîç Searching in vector DB...')
      const searchResults = await searchVND(queryVector, { 
        topK: 5,  // –£–º–µ–Ω—å—à–µ–Ω–æ —Å 10 –¥–æ 5
        limit: 8  // –£–º–µ–Ω—å—à–µ–Ω–æ —Å 15 –¥–æ 8
      })
      console.log('[VND] üìä Search results count:', searchResults.length)
      
      if (searchResults.length > 0) {
        hasContextFromDB = true
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        const MAX_TEXT_LENGTH = 2000  // –ú–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const MAX_TOTAL_CONTEXT = 15000  // –ú–∞–∫—Å–∏–º—É–º 15KB –æ–±—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        
        let totalLength = 0
        const limitedResults: string[] = []
        
        for (const result of searchResults) {
          // –û–±—Ä–µ–∑–∞–µ–º —Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –æ–Ω —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
          const truncatedText = result.text.length > MAX_TEXT_LENGTH 
            ? result.text.substring(0, MAX_TEXT_LENGTH) + '...'
            : result.text
          
          const resultText: string = `[${limitedResults.length + 1}] ${result.title}\n–†–∞–∑–¥–µ–ª: ${result.metadata?.section_title || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n–°—Ö–æ–¥—Å—Ç–≤–æ: ${(result.similarity * 100).toFixed(1)}%\n–¢–µ–∫—Å—Ç: ${truncatedText}\n`
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–º –ª–∏ –º—ã –ª–∏–º–∏—Ç
          if (totalLength + resultText.length > MAX_TOTAL_CONTEXT) {
            console.log('[VND] ‚ö†Ô∏è Context size limit reached, stopping at', limitedResults.length, 'results')
            break
          }
          
          limitedResults.push(resultText)
          totalLength += resultText.length
        }
        
        context = limitedResults.join('\n---\n')
        console.log('[VND] ‚úÖ Context prepared, length:', context.length, 'chars (from', searchResults.length, 'results)')
      } else {
        console.log('[VND] ‚ö†Ô∏è No results found from vector search')
      }
    } catch (error) {
      console.error('[VND] ‚ùå Vector DB search error:', error)
      // –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø—É—Å—Ç—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è alemllm
    const systemPrompt = `–¢—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –ê–û ¬´–°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞¬ª, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏—è—Ö –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–∏–∑–Ω–µ—Å–∞.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º (–í–ù–î) –∫–æ–º–ø–∞–Ω–∏–∏ –°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞.

**–í–ê–ñ–ù–û:**
- –ê–û ¬´–°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞¬ª - –∫—Ä—É–ø–Ω–µ–π—à–∏–π —Ö–æ–ª–¥–∏–Ω–≥ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏
- –í–ù–î –≤–∫–ª—é—á–∞—é—Ç: –ø–æ–ª–∏—Ç–∏–∫–∏, —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã, —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–∞–≤–∏–ª–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
- –ï—Å–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–∏ –æ–±—â–∏–µ –∑–Ω–∞–Ω–∏—è –æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –∫—Ä—É–ø–Ω—ã—Ö —Ö–æ–ª–¥–∏–Ω–≥–æ–≤
- –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫: "–ü–æ –¥–∞–Ω–Ω—ã–º –í–ù–î..." –∏–ª–∏ "–ù–∞ –æ—Å–Ω–æ–≤–µ –æ–±—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

–ü—Ä–∏ –æ—Ç–≤–µ—Ç–µ:
- –î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —á–µ—Ç–∫–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –æ–±—â–∏–µ –∑–Ω–∞–Ω–∏—è, —É–ø–æ–º—è–Ω–∏, —á—Ç–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –í–ù–î
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: –ø–æ–Ω—è—Ç–Ω—ã–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π.`

    const userPrompt = hasContextFromDB 
      ? `–ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ê–û ¬´–°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞¬ª:

${context}

–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${message}

–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –í–ù–î. –°—Å—ã–ª–∞–π—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ä–∞–∑–¥–µ–ª—ã.`
      : `–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º –ê–û ¬´–°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞¬ª: ${message}

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –±–∞–∑—ã –í–ù–î –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –û—Ç–≤–µ—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏–π –æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –∫—Ä—É–ø–Ω—ã—Ö —Ö–æ–ª–¥–∏–Ω–≥–æ–≤. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏, —á—Ç–æ –¥–ª—è —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –í–ù–î –∫–æ–º–ø–∞–Ω–∏–∏.`

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç alemllm
    let response: string
    try {
      console.log('[VND] ü§ñ Calling AlemLLM API...')
      console.log('[VND] üìù System prompt length:', systemPrompt.length)
      console.log('[VND] üìù User prompt length:', userPrompt.length)
      console.log('[VND] üìù Total prompt length:', systemPrompt.length + userPrompt.length)
      
      response = await alemllm.complete(userPrompt, systemPrompt, {
        max_tokens: 2048,  // –£–º–µ–Ω—å—à–µ–Ω–æ —Å 4096 –¥–æ 2048
        temperature: 0.3
      })
      
      console.log('[VND] ‚úÖ AlemLLM response received, length:', response.length)
    } catch (error) {
      console.error('[VND] ‚ùå AlemLLM API error:', error)
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AlemLLM API' 
      }, { status: 503 })
    }

    console.log('[VND] ‚úÖ Request completed successfully')
    return NextResponse.json({ response })

  } catch (error) {
    console.error('[VND] ‚ùå Unexpected error:', error)
    return NextResponse.json({ 
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' 
    }, { status: 500 })
  }
}